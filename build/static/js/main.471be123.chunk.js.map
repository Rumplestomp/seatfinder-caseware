{"version":3,"sources":["util/responsiveUtil.js","util/responsive.js","util/container.jsx","finder/finderCard.jsx","responseText/responseText.jsx","finder/finder.js","App.js","index.js"],"names":["IdDeviceBreakpointsByWidth","IdMobileHeight","getWindowDimension","width","window","innerWidth","document","documentElement","clientWidth","body","height","innerHeight","clientHeight","initialState","Responsive","state","render","props","children","displayIn","shouldRenderChildren","shouldRender","Fragment","handleResize","setState","display","indexOf","addEventListener","this","removeEventListener","React","PureComponent","StyledResponsive","styled","flexDirection","centered","Container","div","BlueBackground","isMobile","pre","isError","CaseWareLogoContainer","CaseWareLogo","src","alt","SubmitBtn","button","NameForm","form","Finder","useState","fname","setFname","text","response","setResponse","searchedNames","setSearchedNames","debouncedQueryNames","AwesomeDebouncePromise","name","fetch","encodeURIComponent","inputNameHandler","e","a","target","value","nameValue","length","res","json","jsonData","status","formatResponse","data","first_name","floor","seat","selectBox","size","onChange","event","id","method","then","responseData","last_name","catch","err","toString","handleSelectName","disabled","defaultValue","map","key","label","responseSection","onSubmit","preventDefault","nameSubmitHandler","type","App","className","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.471be123.chunk.js","sourcesContent":["// Code from: https://medium.com/applike/https-medium-com-applike-react-responsive-conditional-rendering-of-component-c97ab247097d\n\nexport const DeviceWidthObject = {\n  MobileSmall     : { max: 320, min: 0 },\n  MobileMedium    : { max: 375, min: 321 },\n  MobileLarge     : { max: 767, min: 376 },\n  Tablet          : { max: 991, min: 768 },\n  LaptopSmall     : { max: 1024, min: 992 },\n  LaptopLarge     : { max: 1440, min: 1025 },\n  LargerThanLaptop: { max: 2560, min: 1441 },\n  LargeScreenMax  : { max: 999999, min: 2561 }\n};\nexport const IdDeviceBreakpointsByWidth = {\n  laptop_max  : 1440,\n  laptop_min  : 992,\n  tablet_min  : 768,\n  tablet_max  : 991,\n  mobile_max  : 767,\n  default_min : 768 // Unrecognized device\n}\n\nexport const IdMobileHeight = {\n  mobileLandscape_min : 320,\n  mobileLandscape_max : 425\n}\n\nexport const getWindowDimension = () => {const width = window.innerWidth \n  || document.documentElement.clientWidth\n  || document.body.clientWidth;const height = window.innerHeight\n  || document.documentElement.clientHeight\n  || document.body.clientHeight;return {width, height}};\n\nexport const getDeviceTypeInfo = () => {\n  const { width, height } = getWindowDimension()\n  const buildDeviceDetails = {\n    deviceType: '',\n    deviceTypeVariant: '',\n    orientation: 'Portrait',\n    width,\n    height,\n    isFallback: false\n  }\n//  Edge case\n  const hasEdgeCase = handleExceptions(buildDeviceDetails, width, height);\n  if (hasEdgeCase) {\n    return hasEdgeCase;\n  }\n  if (height < width) {\n    // Orientation is landscape\n    buildDeviceDetails.orientation = 'Landscape';\n\n    if (height <= IdMobileHeight.mobileLandscape_max) {\n      // Mobile (landscape)\n      buildDeviceDetails.deviceType = 'Mobile';\n      for (const devc in DeviceWidthObject) {\n        if (\n          height <= DeviceWidthObject[devc].max &&\n          height >= DeviceWidthObject[devc].min\n        ) {\n          buildDeviceDetails.deviceTypeVariant = devc;\n          break;\n        }\n      }\n    } else if (\n      width <= IdDeviceBreakpointsByWidth.tablet_max &&\n      width >= IdDeviceBreakpointsByWidth.tablet_min\n    ) {\n      // Tablet (landscape)\n      buildDeviceDetails.deviceType = 'Tablet';\n      buildDeviceDetails.deviceTypeVariant = 'Tablet';\n    } else if (\n      width <= IdDeviceBreakpointsByWidth.laptop_max &&\n      width >= IdDeviceBreakpointsByWidth.laptop_min\n    ) {\n      // Laptop (landscape)\n      buildDeviceDetails.deviceType = 'Laptop';\n\n      for (const devc in DeviceWidthObject) {\n        if (\n          width <= DeviceWidthObject[devc].max &&\n          width >= DeviceWidthObject[devc].min\n        ) {\n          buildDeviceDetails.deviceTypeVariant = devc;\n          break;\n        }\n      }\n    } else if (width > IdDeviceBreakpointsByWidth.laptop_max) {\n      // Larger than Laptop (landscape)\n      buildDeviceDetails.deviceType = 'LargerThanLaptop';\n\n      for (const devc in DeviceWidthObject) {\n        if (\n          width <= DeviceWidthObject[devc].max &&\n          width >= DeviceWidthObject[devc].min\n        ) {\n          buildDeviceDetails.deviceTypeVariant = devc;\n          break;\n        }\n      }\n    } else {\n      // TODO: UNKNOWN realm\n      buildDeviceDetails.deviceType = 'Mobile';\n      buildDeviceDetails.deviceTypeVariant = 'MobileLarge';\n      buildDeviceDetails.isFallback = true;\n    }\n\n    return buildDeviceDetails;\n  } else {\n    // Orientation is portrait\n    buildDeviceDetails.orientation = 'Portrait'\n\n    for (const devc in DeviceWidthObject) {\n      if (\n        width <= DeviceWidthObject[devc].max &&\n        width >= DeviceWidthObject[devc].min\n      ) {\n        buildDeviceDetails.deviceTypeVariant = devc;\n        break;\n      }\n    }\n\n    if (\n      width <= IdDeviceBreakpointsByWidth.laptop_max &&\n      width >= IdDeviceBreakpointsByWidth.laptop_min\n    ) {\n      buildDeviceDetails.deviceType = 'Laptop';\n    }\n\n    if (\n      width <= IdDeviceBreakpointsByWidth.tablet_max &&\n      width >= IdDeviceBreakpointsByWidth.tablet_min\n    ) {\n      buildDeviceDetails.deviceType = 'Tablet';\n    }\n    if (width <= IdDeviceBreakpointsByWidth.mobile_max) {\n      buildDeviceDetails.deviceType = 'Mobile';\n    }\n\n    if (width > IdDeviceBreakpointsByWidth.laptop_max) {\n      buildDeviceDetails.deviceType = 'LargerThanLaptop';\n    }\n\n    return buildDeviceDetails;\n  }\n}\nconst handleExceptions = (buildDeviceDetails, width, height) => {\n  //  iPadPro\n  if (width === 1024 && height === 1366) {\n    buildDeviceDetails.deviceType = 'Tablet';\n    buildDeviceDetails.deviceTypeVariant = 'iPadPro';\n    buildDeviceDetails.orientation = 'Portrait';\n\n    return buildDeviceDetails\n  } else if (width === 1366 && height === 1024) {\n    //  Edge case\n    buildDeviceDetails.deviceType = 'Tablet';\n    buildDeviceDetails.deviceTypeVariant = 'iPadPro';\n    buildDeviceDetails.orientation = 'Landscape';\n\n    return buildDeviceDetails;\n  }\n\n  return undefined;\n}\n","// Code from: https://medium.com/applike/https-medium-com-applike-react-responsive-conditional-rendering-of-component-c97ab247097d\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport {\n  getWindowDimension,\n  IdDeviceBreakpointsByWidth,\n  IdMobileHeight\n} from './responsiveUtil';\nconst { width, height } = getWindowDimension();\nconst initialState = { width, height };\n\nexport class Responsive extends React.PureComponent {\n  state = initialState\n  componentDidMount () {\n    window.addEventListener('resize', this.handleResize, false);\n  }\n  componentWillUnmount () {\n    window.removeEventListener('resize', this.handleResize, false);\n  }\n  render = () => {\n    const { children, displayIn } = this.props;\n    const { width, height } = this.state;\n    const shouldRenderChildren = this.shouldRender(displayIn, width, height);\n    return (\n      <React.Fragment>\n        {shouldRenderChildren ? children : null}\n      </React.Fragment>\n    )\n  }\n  handleResize = () => {\n    const { width, height } = getWindowDimension()\n    this.setState({ width, height })\n  }\n  shouldRender = (display, width, height) => {\n    if (\n      display.indexOf('Laptop') !== -1 &&\n      width >= IdDeviceBreakpointsByWidth.laptop_min\n    ) {\n      return true\n    }\n    if (\n      display.indexOf('Tablet') !== -1 &&\n      (width <= IdDeviceBreakpointsByWidth.tablet_max &&\n        width >= IdDeviceBreakpointsByWidth.tablet_min)\n    ) {\n      return true\n    }\n    // For mobile regardless of orientation\n    if (\n      display.indexOf('Mobile') !== -1 &&\n      width <= IdDeviceBreakpointsByWidth.mobile_max\n    ) {\n      return true\n    }\n    if (\n      display.indexOf('MobilePortrait') !== -1 &&\n      (width <= IdDeviceBreakpointsByWidth.mobile_max &&\n        height >= IdMobileHeight.mobileLandscape_max)\n    ) {\n      return true\n    }    return !!(\n      display.indexOf('MobileLandScape') !== -1 &&\n      (width <= IdDeviceBreakpointsByWidth.mobile_max &&\n        height <= IdMobileHeight.mobileLandscape_min)\n    )\n  }\n}\n\nexport const StyledResponsive = styled(Responsive)`\n    display: flex;\n    flex-direction: ${ ({ flexDirection }) => ( flexDirection || 'row' ) };\n    justify-content: ${ ({ centered }) => ( centered ? 'center' : 'unset' ) };\n    align-items: ${ ({ centered }) => ( centered ? 'center' : 'unset' ) };\n  `","// import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: ${props => ( props.flexDirection ? props.flexDirection : 'row' )};\n    justify-content: ${props => ( props.centered ? 'center' : 'unset' )};\n    align-items: ${props => (props.centered ? 'center' : 'unset')};\n  `\n\nconst BlueBackground = styled(Container)`\n  top: 0px;\n  left: 0px;\n  width: 100%;\n  height: 100%;\n  background: transparent linear-gradient(247deg, #0684AC 0%, #0684AC66 100%) 0% 0% no-repeat padding-box;\n  box-sizing: border-box;\n  border: 1px solid #707070;\n  opacity: 1;\n`\n\nexport { Container as default, BlueBackground }","import styled from 'styled-components';\nimport Container from '../util/container';\n\nexport default styled(Container)`\n  top: 115px;\n  left: 430px;\n  width: ${ ({ isMobile }) => (isMobile ? '100%' : '420px')};\n  height: ${ ({ isMobile }) => (isMobile ? '100%' : '570px')};\n  background: #FFFFFF 0% 0% no-repeat padding-box;\n  box-shadow: 0px 3px 6px #00000029;\n  border: 2px solid #C7972C;\n  border-radius: 10px;\n  opacity: 1;\n  flex-direction: column;\n  box-sizing: ${ ({ isMobile }) => (isMobile ? 'border-box' : 'initial') };\n`","import styled from 'styled-components';\n\nexport default styled.pre`\n  text-align: center;\n  font-size: 25px;\n  font-family: Sans;\n  font-weight: Bold;\n  letter-spacing: 0px;\n  overflow: auto;\n  color: ${ ({ isError }) => ( isError ? '#DE0000;' : '#0885AC' ) };\n`\n// color is red if error, blue otherwise.\n\n","import React, { useState } from 'react';\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\nimport styled from 'styled-components'\n\nimport FinderCard from './finderCard';\nimport ResponseText from '../responseText/responseText.jsx';\nimport Container from '../util/container';\n\n// Logo Elements\nconst CaseWareLogoContainer = styled(Container)`\n  padding: 19px 24px 19px 24px;\n`\nconst CaseWareLogo = (\n  <CaseWareLogoContainer>\n    <img src='casewarelogo.png' alt='CaseWare Logo'></img>\n  </CaseWareLogoContainer>\n)\n\n// Form Elements\nconst SubmitBtn = styled.button`\n  width: 132px;\n  height: 49px;\n  background: #0885AC 0% 0% no-repeat padding-box;\n  box-shadow: 0px 3px 6px #00000029;\n  opacity: 1;\n\n  text-align: center;\n  font-size: 25px;\n  letter-spacing: 0px;\n  color: #FFFFFF;\n  opacity: 1;\n`\nconst NameForm = styled.form`\n  input {\n    width: 300px;\n    height: 66px;\n    background: #FFFFFF 0% 0% no-repeat padding-box;\n    box-shadow: 0px 3px 6px #00000029;\n    border: 1px solid #707070;\n    opacity: 1;\n    margin-bottom: 50px;\n\n    text-align: center;\n    font-size: 25px;\n    letter-spacing: 0px;\n    color: #3B3939D6;\n    opacity: 1;\n\n  }\n\n  ${SubmitBtn}, select {\n    margin-bottom: 40px;\n  }\n`\n/** \n * The Main card component, containing the form and searching capabilities for\n * employees seating data.\n * */\nexport default function Finder({ isMobile }) {\n\n  // The value of the name in the single input form\n  const [fname, setFname] = useState('');\n  // The response of the form, to be displayed at bottom of main component\n  const [response, setResponse] = useState({ text: '', isError: false });\n  // The list of similarly matching names, used in the select menu (auto-updated as you type in form)\n  const [searchedNames, setSearchedNames] = useState([]);\n  // \"name\" data structure: {id: int, first_name: str, last_name:str, floor: int, seat: str/char}\n\n  // function used to populate search bar with list of names\n  const queryNames = (name = '') => fetch(\n      `/employees?fname=${encodeURIComponent(name || fname)}`\n  )\n  // Function that debounces employee search query, fires when user finishes typing\n  const debouncedQueryNames = AwesomeDebouncePromise(queryNames, 500)\n\n  /**\n   * Handler for the name text box onChange\n   * Will update state and perform querying for similar matching names\n   */\n  const inputNameHandler = async (e) => {\n    // Update the text box\n    const nameValue = await e.target.value\n    setFname(nameValue)\n    // Yeah, so on like 3 or more chars, debounce input and populate list of employees in a select field thingy\n    if (nameValue.length >= 3) {\n      const res = await debouncedQueryNames(nameValue);\n      const jsonData = await res.json()\n      \n      if (res.length === 0) {\n        setSearchedNames([])\n      }\n      // if there is a current response up, and the fname is a singular match, then unset setSearchedNames, and leave the response\n      else if (response.text && jsonData.length===1) {\n        setSearchedNames([])\n      }\n      // otherwise, update select menu accordingly\n      else {\n        res.status >= 400 ? setSearchedNames([]) : setSearchedNames(jsonData);\n        setResponse({ text: '', isError: false });\n      }\n    }\n    // reset select menu without debounced query\n    else {\n      setSearchedNames([])\n    }\n  }\n\n  /**\n   * Handler for the form submit, not to be confused with the onChange handler for the text box\n   * Note: this must be an onChange handler. In the case that the user presses Enter from the form,\n   * it would be ignored by a submit button onClick\n   */\n  const nameSubmitHandler = (e) => {\n    e.preventDefault();\n    // TODO: move hostname elsewhere\n    fetch(`/employees?fname=${encodeURIComponent(fname)}`, {\n      method: 'GET',\n    })\n      .then(async res => {\n        let responseData = await res.json()\n        // if there are multiple options, populate list, perhaps notfiy user to pick one\n        if (responseData.length > 1) {\n          setSearchedNames(responseData)\n        }\n        // if there is one option, with matching full name, autofill and continue\n        else if (responseData.length === 1) {\n          setFname(`${responseData[0].first_name} ${responseData[0].last_name}`)\n          setResponse({ text: formatResponse(responseData[0]), isError: false });\n          setSearchedNames([]);\n          // cancel out debounced query\n          \n        }\n        // if there are no options, say sorry\n        else {\n          setResponse({text: formatResponse(false), isError: true});\n        }\n    }).catch( err => {\n      setResponse({text: err.toString(), isError: true});\n    })\n    \n  }\n\n  /**\n   * Handler for the select menu.\n   * Note: Since the select menu has access to full employee data, a query by id can be performed\n   * Event.target.value: the value of the select option chosen (type: employee.id/int) \n   * Uses employee id number to perform search and set state accordingly\n   */\n  const handleSelectName = (event) => {\n    const id = event.target.value;\n    fetch(`/employees/${id}`, {\n      method: 'GET',\n    })\n      .then(async res => {\n        if (res.status >= 400) {\n          setResponse({text: formatResponse(false), isError: true});\n        }\n        else {\n          setSearchedNames([])\n          let responseData = await res.json();\n          setFname(`${responseData.first_name} ${responseData.last_name}`)\n          setResponse({text: formatResponse(responseData), isError: false});\n        }\n      }).catch(err => {\n        setResponse({text: err.toString(), isError: true});\n    })\n  }\n\n  // Helper function to format response text for the ResponseText component\n  const formatResponse = data => {\n    if (!data) {\n      return `Could not find \\n ${fname} in the system`\n    }\n    return `${data.first_name} is seated on \\n Floor ${data.floor} \\n Seat ${data.seat}`\n  }\n\n  // The selectBox component to be populated with matching employee names, and un-rendered when not in use\n  const selectBox = searchedNames.length > 0 ? (\n    <select size={4} onChange={ (e) => {handleSelectName(e)} }>\n      <option disabled defaultValue></option>\n      {/* map the names to option elements */}\n      {searchedNames.map(data => {\n        return (\n          <option key={data.id} value={data.id} label={`${data.first_name} ${data.last_name}`}>\n            {`${data.first_name} ${data.last_name}`}\n          </option>\n        )\n      })}\n    </select>\n  ) : null;\n\n  // ResponseText component, but conditionnally rendered only if there is response text to show\n  const responseSection = response.text ? (\n    <ResponseText isError={response.isError}>{response.text}</ResponseText>\n  ) : null\n\n  return (\n    <FinderCard isMobile={isMobile}>\n      {CaseWareLogo}\n\n      <Container centered>\n        <h1>Seat Lookup</h1>\n      </Container>\n\n      <Container centered>\n        <NameForm onSubmit={(e) => { nameSubmitHandler(e) }}>\n          <input type='text' name='name' value={fname} onChange={(e) => inputNameHandler(e)} />\n          <br/>\n          {selectBox}\n          <br/>\n          <SubmitBtn type='submit'>GO</SubmitBtn>\n        </NameForm>\n      </Container>\n\n      {/* responseSection is already self-centered, but not in a container */}\n      {responseSection}\n    </FinderCard>\n  );\n\n}","import React from 'react';\nimport './App.css';\nimport { StyledResponsive } from './util/responsive';\nimport Finder from './finder/finder';\nimport { BlueBackground } from './util/container';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      {/* Responsive options: [Laptop, Tablet, Mobile, MobilePortrait, MobileLandScape] */}\n      <StyledResponsive displayIn={['Laptop', 'Tablet', 'MobileLandScape']}>\n        <BlueBackground flexDirection='column' centered>\n          <Finder/>\n        </BlueBackground>\n      </StyledResponsive>\n      {/* Mobile App Below */}\n      <StyledResponsive displayIn={['Mobile']}>\n        <Finder isMobile/>\n      </StyledResponsive>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}